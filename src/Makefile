# Makefile.in generated by automake 1.11.3 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/polarhrm
pkgincludedir = $(includedir)/polarhrm
pkglibdir = $(libdir)/polarhrm
pkglibexecdir = $(libexecdir)/polarhrm
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = simulate$(EXEEXT) test$(EXEEXT) polarhrm$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in texinfo.tex
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libpolarhrm_la_DEPENDENCIES =
am_libpolarhrm_la_OBJECTS = libpolarhrm_la-file_operations.lo \
	libpolarhrm_la-driver.lo libpolarhrm_la-irda_driver.lo \
	libpolarhrm_la-datalnk_driver.lo libpolarhrm_la-S625X.lo \
	libpolarhrm_la-S625X_comm.lo \
	libpolarhrm_la-S625X_parse_overview.lo \
	libpolarhrm_la-S625X_parse_session.lo \
	libpolarhrm_la-S625X_parse.lo libpolarhrm_la-RS800CX.lo \
	libpolarhrm_la-RS800CX_comm.lo \
	libpolarhrm_la-RS800CX_parse_overview.lo \
	libpolarhrm_la-RS800CX_parse_session.lo \
	libpolarhrm_la-RS800CX_parse.lo libpolarhrm_la-Overview.lo \
	libpolarhrm_la-RawSessionFile.lo libpolarhrm_la-RawSessions.lo \
	libpolarhrm_la-wDate.lo libpolarhrm_la-HrmFile.lo \
	libpolarhrm_la-Lap.lo libpolarhrm_la-Limit.lo \
	libpolarhrm_la-Sample.lo libpolarhrm_la-Session.lo \
	libpolarhrm_la-sportZone.lo libpolarhrm_la-wTime.lo \
	libpolarhrm_la-Watch.lo libpolarhrm_la-util_functions.lo \
	libpolarhrm_la-Datanode.lo libpolarhrm_la-libpolarhrm.lo \
	libpolarhrm_la-Gps.lo libpolarhrm_la-GpxFile.lo \
	libpolarhrm_la-RCX5_comm.lo libpolarhrm_la-RCX5.lo \
	libpolarhrm_la-RCX5_parse.lo \
	libpolarhrm_la-RCX5_parse_overview.lo \
	libpolarhrm_la-RCX5_parse_session.lo libpolarhrm_la-PddFile.lo \
	libpolarhrm_la-ExercisePddFile.lo
libpolarhrm_la_OBJECTS = $(am_libpolarhrm_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libpolarhrm_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_polarhrm_OBJECTS = polarhrm.$(OBJEXT)
polarhrm_OBJECTS = $(am_polarhrm_OBJECTS)
polarhrm_DEPENDENCIES = libpolarhrm.la
am_simulate_OBJECTS = simulate_watch.$(OBJEXT)
simulate_OBJECTS = $(am_simulate_OBJECTS)
simulate_DEPENDENCIES = libpolarhrm.la
am_test_OBJECTS = test-test.$(OBJEXT)
test_OBJECTS = $(am_test_OBJECTS)
test_DEPENDENCIES = libpolarhrm.la
test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(test_CXXFLAGS) \
	$(CXXFLAGS) $(test_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libpolarhrm_la_SOURCES) $(polarhrm_SOURCES) \
	$(simulate_SOURCES) $(test_SOURCES)
DIST_SOURCES = $(libpolarhrm_la_SOURCES) $(polarhrm_SOURCES) \
	$(simulate_SOURCES) $(test_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/thomas/projects/polarhrm/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/thomas/projects/polarhrm/missing --run autoconf
AUTOHEADER = ${SHELL} /home/thomas/projects/polarhrm/missing --run autoheader
AUTOMAKE = ${SHELL} /home/thomas/projects/polarhrm/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUSB_CFLAGS =  
LIBUSB_LIBS = -lusb  
LIBXML_CFLAGS = -I/usr/include/libxml2  
LIBXML_LIBS = -lxml2  
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/thomas/projects/polarhrm/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MYPATH = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = polarhrm
PACKAGE_BUGREPORT = mailto:thomas.foyth@gmail.com
PACKAGE_NAME = polarhrm
PACKAGE_STRING = polarhrm 2012-04-04
PACKAGE_TARNAME = polarhrm
PACKAGE_URL = 
PACKAGE_VERSION = 2012-04-04
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 2012-04-04
abs_builddir = /home/thomas/projects/polarhrm/src
abs_srcdir = /home/thomas/projects/polarhrm/src
abs_top_builddir = /home/thomas/projects/polarhrm
abs_top_srcdir = /home/thomas/projects/polarhrm
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/thomas/projects/polarhrm/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
libpolarhrm_la_LIBADD = -lxml2 \
	-lusb 

SUBDIRS = \
	libpolarhrm

simulate_SOURCES = \
	cli/simulate_watch.cpp

simulate_LDADD = libpolarhrm.la 
test_SOURCES = \
	cli/test.cpp

test_CXXFLAGS = -I \
	/usr/include/libxml2 

test_LDFLAGS = -lxml2 \
	-lusb 

test_LDADD = libpolarhrm.la 
polarhrm_SOURCES = \
	cli/polarhrm.cpp \
	cli/polarhrm.h \
	cli/polarhrm_config.h

polarhrm_LDADD = libpolarhrm.la 
lib_LTLIBRARIES = \
	libpolarhrm.la

libpolarhrm_la_SOURCES = \
	libpolarhrm/file_operations.cpp   \
	libpolarhrm/file_operations.h   \
	libpolarhrm/Driver/driver.h   \
	libpolarhrm/Driver/driver.cpp   \
	libpolarhrm/Driver/irda_driver.h   \
	libpolarhrm/Driver/irda_driver.cpp   \
	libpolarhrm/Driver/datalnk_driver.cpp   \
	libpolarhrm/Driver/datalnk_driver.h   \
	libpolarhrm/S625X_watch/S625X.cpp   \
	libpolarhrm/S625X_watch/S625X.h   \
	libpolarhrm/S625X_watch/S625X_comm.cpp   \
	libpolarhrm/S625X_watch/S625X_comm.h   \
	libpolarhrm/S625X_watch/S625X_commands.h   \
	libpolarhrm/S625X_watch/S625X_parse_overview.cpp   \
	libpolarhrm/S625X_watch/S625X_parse_session.cpp   \
	libpolarhrm/S625X_watch/S625X_parse.h   \
	libpolarhrm/S625X_watch/S625X_parse.cpp   \
	libpolarhrm/RS800CX_watch/RS800CX.cpp   \
	libpolarhrm/RS800CX_watch/RS800CX.h   \
	libpolarhrm/RS800CX_watch/RS800CX_comm.cpp   \
	libpolarhrm/RS800CX_watch/RS800CX_comm.h   \
	libpolarhrm/RS800CX_watch/RS800CX_commands.h   \
	libpolarhrm/RS800CX_watch/RS800CX_parse_overview.cpp   \
	libpolarhrm/RS800CX_watch/RS800CX_parse_session.cpp   \
	libpolarhrm/RS800CX_watch/RS800CX_parse.h   \
	libpolarhrm/RS800CX_watch/RS800CX_parse.cpp   \
	libpolarhrm/Watch/Overview.cpp   \
	libpolarhrm/Watch/Overview.h   \
	libpolarhrm/Watch/RawSessionFile.cpp   \
	libpolarhrm/Watch/RawSessionFile.h   \
	libpolarhrm/Watch/RawSessions.cpp   \
	libpolarhrm/Watch/RawSessions.h   \
	libpolarhrm/Watch/wDate.cpp   \
	libpolarhrm/Watch/wDate.h   \
	libpolarhrm/Watch/HrmFile.cpp   \
	libpolarhrm/Watch/HrmFile.h   \
	libpolarhrm/Watch/Lap.cpp   \
	libpolarhrm/Watch/Lap.h   \
	libpolarhrm/Watch/Limit.cpp   \
	libpolarhrm/Watch/Limit.h   \
	libpolarhrm/Watch/Sample.cpp   \
	libpolarhrm/Watch/Sample.h   \
	libpolarhrm/Watch/Session.cpp   \
	libpolarhrm/Watch/Session.h   \
	libpolarhrm/Watch/sportZone.cpp   \
	libpolarhrm/Watch/sportZone.h   \
	libpolarhrm/Watch/wTime.cpp   \
	libpolarhrm/Watch/wTime.h   \
	libpolarhrm/Watch/Watch.h   \
	libpolarhrm/Watch/Watch.cpp   \
	libpolarhrm/util_functions.cpp   \
	libpolarhrm/util_functions.h   \
	libpolarhrm/Datanode.cpp   \
	libpolarhrm/Datanode.h   \
	libpolarhrm/libpolarhrm.cpp   \
	libpolarhrm/libpolarhrm.h   \
	libpolarhrm/supported_devices.h   \
	libpolarhrm/Watch/Gps.cpp   \
	libpolarhrm/Watch/Gps.h   \
	libpolarhrm/Watch/GpxFile.cpp   \
	libpolarhrm/Watch/GpxFile.h   \
	libpolarhrm/RCX5_watch/RCX5_comm.h   \
	libpolarhrm/RCX5_watch/RCX5_comm.cpp   \
	libpolarhrm/RCX5_watch/RCX5.cpp   \
	libpolarhrm/RCX5_watch/RCX5.h   \
	libpolarhrm/RCX5_watch/RCX5_parse.cpp   \
	libpolarhrm/RCX5_watch/RCX5_parse.h   \
	libpolarhrm/RCX5_watch/RCX5_parse_overview.cpp   \
	libpolarhrm/RCX5_watch/RCX5_parse_session.cpp   \
	libpolarhrm/Watch/PddFile.h   \
	libpolarhrm/Watch/PddFile.cpp   \
	libpolarhrm/Watch/ExercisePddFile.h   \
	libpolarhrm/Watch/ExercisePddFile.cpp

libpolarhrm_la_CXXFLAGS = -I \
	/usr/include/libxml2 

AM_CPPFLAGS = \
	-DPACKAGE_LOCALE_DIR=\""$(prefix)/$(DATADIRNAME)/locale"\" \
	-DPACKAGE_SRC_DIR=\""$(srcdir)"\" \
	-DPACKAGE_DATA_DIR=\""$(datadir)"\" 

AM_CFLAGS = \
	 -Wall\
	 -g

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libpolarhrm.la: $(libpolarhrm_la_OBJECTS) $(libpolarhrm_la_DEPENDENCIES) $(EXTRA_libpolarhrm_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libpolarhrm_la_LINK) -rpath $(libdir) $(libpolarhrm_la_OBJECTS) $(libpolarhrm_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
polarhrm$(EXEEXT): $(polarhrm_OBJECTS) $(polarhrm_DEPENDENCIES) $(EXTRA_polarhrm_DEPENDENCIES) 
	@rm -f polarhrm$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(polarhrm_OBJECTS) $(polarhrm_LDADD) $(LIBS)
simulate$(EXEEXT): $(simulate_OBJECTS) $(simulate_DEPENDENCIES) $(EXTRA_simulate_DEPENDENCIES) 
	@rm -f simulate$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(simulate_OBJECTS) $(simulate_LDADD) $(LIBS)
test$(EXEEXT): $(test_OBJECTS) $(test_DEPENDENCIES) $(EXTRA_test_DEPENDENCIES) 
	@rm -f test$(EXEEXT)
	$(AM_V_CXXLD)$(test_LINK) $(test_OBJECTS) $(test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libpolarhrm_la-Datanode.Plo
include ./$(DEPDIR)/libpolarhrm_la-ExercisePddFile.Plo
include ./$(DEPDIR)/libpolarhrm_la-Gps.Plo
include ./$(DEPDIR)/libpolarhrm_la-GpxFile.Plo
include ./$(DEPDIR)/libpolarhrm_la-HrmFile.Plo
include ./$(DEPDIR)/libpolarhrm_la-Lap.Plo
include ./$(DEPDIR)/libpolarhrm_la-Limit.Plo
include ./$(DEPDIR)/libpolarhrm_la-Overview.Plo
include ./$(DEPDIR)/libpolarhrm_la-PddFile.Plo
include ./$(DEPDIR)/libpolarhrm_la-RCX5.Plo
include ./$(DEPDIR)/libpolarhrm_la-RCX5_comm.Plo
include ./$(DEPDIR)/libpolarhrm_la-RCX5_parse.Plo
include ./$(DEPDIR)/libpolarhrm_la-RCX5_parse_overview.Plo
include ./$(DEPDIR)/libpolarhrm_la-RCX5_parse_session.Plo
include ./$(DEPDIR)/libpolarhrm_la-RS800CX.Plo
include ./$(DEPDIR)/libpolarhrm_la-RS800CX_comm.Plo
include ./$(DEPDIR)/libpolarhrm_la-RS800CX_parse.Plo
include ./$(DEPDIR)/libpolarhrm_la-RS800CX_parse_overview.Plo
include ./$(DEPDIR)/libpolarhrm_la-RS800CX_parse_session.Plo
include ./$(DEPDIR)/libpolarhrm_la-RawSessionFile.Plo
include ./$(DEPDIR)/libpolarhrm_la-RawSessions.Plo
include ./$(DEPDIR)/libpolarhrm_la-S625X.Plo
include ./$(DEPDIR)/libpolarhrm_la-S625X_comm.Plo
include ./$(DEPDIR)/libpolarhrm_la-S625X_parse.Plo
include ./$(DEPDIR)/libpolarhrm_la-S625X_parse_overview.Plo
include ./$(DEPDIR)/libpolarhrm_la-S625X_parse_session.Plo
include ./$(DEPDIR)/libpolarhrm_la-Sample.Plo
include ./$(DEPDIR)/libpolarhrm_la-Session.Plo
include ./$(DEPDIR)/libpolarhrm_la-Watch.Plo
include ./$(DEPDIR)/libpolarhrm_la-datalnk_driver.Plo
include ./$(DEPDIR)/libpolarhrm_la-driver.Plo
include ./$(DEPDIR)/libpolarhrm_la-file_operations.Plo
include ./$(DEPDIR)/libpolarhrm_la-irda_driver.Plo
include ./$(DEPDIR)/libpolarhrm_la-libpolarhrm.Plo
include ./$(DEPDIR)/libpolarhrm_la-sportZone.Plo
include ./$(DEPDIR)/libpolarhrm_la-util_functions.Plo
include ./$(DEPDIR)/libpolarhrm_la-wDate.Plo
include ./$(DEPDIR)/libpolarhrm_la-wTime.Plo
include ./$(DEPDIR)/polarhrm.Po
include ./$(DEPDIR)/simulate_watch.Po
include ./$(DEPDIR)/test-test.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libpolarhrm_la-file_operations.lo: libpolarhrm/file_operations.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-file_operations.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-file_operations.Tpo -c -o libpolarhrm_la-file_operations.lo `test -f 'libpolarhrm/file_operations.cpp' || echo '$(srcdir)/'`libpolarhrm/file_operations.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-file_operations.Tpo $(DEPDIR)/libpolarhrm_la-file_operations.Plo
#	$(AM_V_CXX)source='libpolarhrm/file_operations.cpp' object='libpolarhrm_la-file_operations.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-file_operations.lo `test -f 'libpolarhrm/file_operations.cpp' || echo '$(srcdir)/'`libpolarhrm/file_operations.cpp

libpolarhrm_la-driver.lo: libpolarhrm/Driver/driver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-driver.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-driver.Tpo -c -o libpolarhrm_la-driver.lo `test -f 'libpolarhrm/Driver/driver.cpp' || echo '$(srcdir)/'`libpolarhrm/Driver/driver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-driver.Tpo $(DEPDIR)/libpolarhrm_la-driver.Plo
#	$(AM_V_CXX)source='libpolarhrm/Driver/driver.cpp' object='libpolarhrm_la-driver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-driver.lo `test -f 'libpolarhrm/Driver/driver.cpp' || echo '$(srcdir)/'`libpolarhrm/Driver/driver.cpp

libpolarhrm_la-irda_driver.lo: libpolarhrm/Driver/irda_driver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-irda_driver.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-irda_driver.Tpo -c -o libpolarhrm_la-irda_driver.lo `test -f 'libpolarhrm/Driver/irda_driver.cpp' || echo '$(srcdir)/'`libpolarhrm/Driver/irda_driver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-irda_driver.Tpo $(DEPDIR)/libpolarhrm_la-irda_driver.Plo
#	$(AM_V_CXX)source='libpolarhrm/Driver/irda_driver.cpp' object='libpolarhrm_la-irda_driver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-irda_driver.lo `test -f 'libpolarhrm/Driver/irda_driver.cpp' || echo '$(srcdir)/'`libpolarhrm/Driver/irda_driver.cpp

libpolarhrm_la-datalnk_driver.lo: libpolarhrm/Driver/datalnk_driver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-datalnk_driver.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-datalnk_driver.Tpo -c -o libpolarhrm_la-datalnk_driver.lo `test -f 'libpolarhrm/Driver/datalnk_driver.cpp' || echo '$(srcdir)/'`libpolarhrm/Driver/datalnk_driver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-datalnk_driver.Tpo $(DEPDIR)/libpolarhrm_la-datalnk_driver.Plo
#	$(AM_V_CXX)source='libpolarhrm/Driver/datalnk_driver.cpp' object='libpolarhrm_la-datalnk_driver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-datalnk_driver.lo `test -f 'libpolarhrm/Driver/datalnk_driver.cpp' || echo '$(srcdir)/'`libpolarhrm/Driver/datalnk_driver.cpp

libpolarhrm_la-S625X.lo: libpolarhrm/S625X_watch/S625X.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-S625X.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-S625X.Tpo -c -o libpolarhrm_la-S625X.lo `test -f 'libpolarhrm/S625X_watch/S625X.cpp' || echo '$(srcdir)/'`libpolarhrm/S625X_watch/S625X.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-S625X.Tpo $(DEPDIR)/libpolarhrm_la-S625X.Plo
#	$(AM_V_CXX)source='libpolarhrm/S625X_watch/S625X.cpp' object='libpolarhrm_la-S625X.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-S625X.lo `test -f 'libpolarhrm/S625X_watch/S625X.cpp' || echo '$(srcdir)/'`libpolarhrm/S625X_watch/S625X.cpp

libpolarhrm_la-S625X_comm.lo: libpolarhrm/S625X_watch/S625X_comm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-S625X_comm.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-S625X_comm.Tpo -c -o libpolarhrm_la-S625X_comm.lo `test -f 'libpolarhrm/S625X_watch/S625X_comm.cpp' || echo '$(srcdir)/'`libpolarhrm/S625X_watch/S625X_comm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-S625X_comm.Tpo $(DEPDIR)/libpolarhrm_la-S625X_comm.Plo
#	$(AM_V_CXX)source='libpolarhrm/S625X_watch/S625X_comm.cpp' object='libpolarhrm_la-S625X_comm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-S625X_comm.lo `test -f 'libpolarhrm/S625X_watch/S625X_comm.cpp' || echo '$(srcdir)/'`libpolarhrm/S625X_watch/S625X_comm.cpp

libpolarhrm_la-S625X_parse_overview.lo: libpolarhrm/S625X_watch/S625X_parse_overview.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-S625X_parse_overview.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-S625X_parse_overview.Tpo -c -o libpolarhrm_la-S625X_parse_overview.lo `test -f 'libpolarhrm/S625X_watch/S625X_parse_overview.cpp' || echo '$(srcdir)/'`libpolarhrm/S625X_watch/S625X_parse_overview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-S625X_parse_overview.Tpo $(DEPDIR)/libpolarhrm_la-S625X_parse_overview.Plo
#	$(AM_V_CXX)source='libpolarhrm/S625X_watch/S625X_parse_overview.cpp' object='libpolarhrm_la-S625X_parse_overview.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-S625X_parse_overview.lo `test -f 'libpolarhrm/S625X_watch/S625X_parse_overview.cpp' || echo '$(srcdir)/'`libpolarhrm/S625X_watch/S625X_parse_overview.cpp

libpolarhrm_la-S625X_parse_session.lo: libpolarhrm/S625X_watch/S625X_parse_session.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-S625X_parse_session.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-S625X_parse_session.Tpo -c -o libpolarhrm_la-S625X_parse_session.lo `test -f 'libpolarhrm/S625X_watch/S625X_parse_session.cpp' || echo '$(srcdir)/'`libpolarhrm/S625X_watch/S625X_parse_session.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-S625X_parse_session.Tpo $(DEPDIR)/libpolarhrm_la-S625X_parse_session.Plo
#	$(AM_V_CXX)source='libpolarhrm/S625X_watch/S625X_parse_session.cpp' object='libpolarhrm_la-S625X_parse_session.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-S625X_parse_session.lo `test -f 'libpolarhrm/S625X_watch/S625X_parse_session.cpp' || echo '$(srcdir)/'`libpolarhrm/S625X_watch/S625X_parse_session.cpp

libpolarhrm_la-S625X_parse.lo: libpolarhrm/S625X_watch/S625X_parse.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-S625X_parse.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-S625X_parse.Tpo -c -o libpolarhrm_la-S625X_parse.lo `test -f 'libpolarhrm/S625X_watch/S625X_parse.cpp' || echo '$(srcdir)/'`libpolarhrm/S625X_watch/S625X_parse.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-S625X_parse.Tpo $(DEPDIR)/libpolarhrm_la-S625X_parse.Plo
#	$(AM_V_CXX)source='libpolarhrm/S625X_watch/S625X_parse.cpp' object='libpolarhrm_la-S625X_parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-S625X_parse.lo `test -f 'libpolarhrm/S625X_watch/S625X_parse.cpp' || echo '$(srcdir)/'`libpolarhrm/S625X_watch/S625X_parse.cpp

libpolarhrm_la-RS800CX.lo: libpolarhrm/RS800CX_watch/RS800CX.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RS800CX.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RS800CX.Tpo -c -o libpolarhrm_la-RS800CX.lo `test -f 'libpolarhrm/RS800CX_watch/RS800CX.cpp' || echo '$(srcdir)/'`libpolarhrm/RS800CX_watch/RS800CX.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RS800CX.Tpo $(DEPDIR)/libpolarhrm_la-RS800CX.Plo
#	$(AM_V_CXX)source='libpolarhrm/RS800CX_watch/RS800CX.cpp' object='libpolarhrm_la-RS800CX.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RS800CX.lo `test -f 'libpolarhrm/RS800CX_watch/RS800CX.cpp' || echo '$(srcdir)/'`libpolarhrm/RS800CX_watch/RS800CX.cpp

libpolarhrm_la-RS800CX_comm.lo: libpolarhrm/RS800CX_watch/RS800CX_comm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RS800CX_comm.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RS800CX_comm.Tpo -c -o libpolarhrm_la-RS800CX_comm.lo `test -f 'libpolarhrm/RS800CX_watch/RS800CX_comm.cpp' || echo '$(srcdir)/'`libpolarhrm/RS800CX_watch/RS800CX_comm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RS800CX_comm.Tpo $(DEPDIR)/libpolarhrm_la-RS800CX_comm.Plo
#	$(AM_V_CXX)source='libpolarhrm/RS800CX_watch/RS800CX_comm.cpp' object='libpolarhrm_la-RS800CX_comm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RS800CX_comm.lo `test -f 'libpolarhrm/RS800CX_watch/RS800CX_comm.cpp' || echo '$(srcdir)/'`libpolarhrm/RS800CX_watch/RS800CX_comm.cpp

libpolarhrm_la-RS800CX_parse_overview.lo: libpolarhrm/RS800CX_watch/RS800CX_parse_overview.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RS800CX_parse_overview.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RS800CX_parse_overview.Tpo -c -o libpolarhrm_la-RS800CX_parse_overview.lo `test -f 'libpolarhrm/RS800CX_watch/RS800CX_parse_overview.cpp' || echo '$(srcdir)/'`libpolarhrm/RS800CX_watch/RS800CX_parse_overview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RS800CX_parse_overview.Tpo $(DEPDIR)/libpolarhrm_la-RS800CX_parse_overview.Plo
#	$(AM_V_CXX)source='libpolarhrm/RS800CX_watch/RS800CX_parse_overview.cpp' object='libpolarhrm_la-RS800CX_parse_overview.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RS800CX_parse_overview.lo `test -f 'libpolarhrm/RS800CX_watch/RS800CX_parse_overview.cpp' || echo '$(srcdir)/'`libpolarhrm/RS800CX_watch/RS800CX_parse_overview.cpp

libpolarhrm_la-RS800CX_parse_session.lo: libpolarhrm/RS800CX_watch/RS800CX_parse_session.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RS800CX_parse_session.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RS800CX_parse_session.Tpo -c -o libpolarhrm_la-RS800CX_parse_session.lo `test -f 'libpolarhrm/RS800CX_watch/RS800CX_parse_session.cpp' || echo '$(srcdir)/'`libpolarhrm/RS800CX_watch/RS800CX_parse_session.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RS800CX_parse_session.Tpo $(DEPDIR)/libpolarhrm_la-RS800CX_parse_session.Plo
#	$(AM_V_CXX)source='libpolarhrm/RS800CX_watch/RS800CX_parse_session.cpp' object='libpolarhrm_la-RS800CX_parse_session.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RS800CX_parse_session.lo `test -f 'libpolarhrm/RS800CX_watch/RS800CX_parse_session.cpp' || echo '$(srcdir)/'`libpolarhrm/RS800CX_watch/RS800CX_parse_session.cpp

libpolarhrm_la-RS800CX_parse.lo: libpolarhrm/RS800CX_watch/RS800CX_parse.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RS800CX_parse.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RS800CX_parse.Tpo -c -o libpolarhrm_la-RS800CX_parse.lo `test -f 'libpolarhrm/RS800CX_watch/RS800CX_parse.cpp' || echo '$(srcdir)/'`libpolarhrm/RS800CX_watch/RS800CX_parse.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RS800CX_parse.Tpo $(DEPDIR)/libpolarhrm_la-RS800CX_parse.Plo
#	$(AM_V_CXX)source='libpolarhrm/RS800CX_watch/RS800CX_parse.cpp' object='libpolarhrm_la-RS800CX_parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RS800CX_parse.lo `test -f 'libpolarhrm/RS800CX_watch/RS800CX_parse.cpp' || echo '$(srcdir)/'`libpolarhrm/RS800CX_watch/RS800CX_parse.cpp

libpolarhrm_la-Overview.lo: libpolarhrm/Watch/Overview.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-Overview.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-Overview.Tpo -c -o libpolarhrm_la-Overview.lo `test -f 'libpolarhrm/Watch/Overview.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Overview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-Overview.Tpo $(DEPDIR)/libpolarhrm_la-Overview.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/Overview.cpp' object='libpolarhrm_la-Overview.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-Overview.lo `test -f 'libpolarhrm/Watch/Overview.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Overview.cpp

libpolarhrm_la-RawSessionFile.lo: libpolarhrm/Watch/RawSessionFile.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RawSessionFile.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RawSessionFile.Tpo -c -o libpolarhrm_la-RawSessionFile.lo `test -f 'libpolarhrm/Watch/RawSessionFile.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/RawSessionFile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RawSessionFile.Tpo $(DEPDIR)/libpolarhrm_la-RawSessionFile.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/RawSessionFile.cpp' object='libpolarhrm_la-RawSessionFile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RawSessionFile.lo `test -f 'libpolarhrm/Watch/RawSessionFile.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/RawSessionFile.cpp

libpolarhrm_la-RawSessions.lo: libpolarhrm/Watch/RawSessions.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RawSessions.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RawSessions.Tpo -c -o libpolarhrm_la-RawSessions.lo `test -f 'libpolarhrm/Watch/RawSessions.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/RawSessions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RawSessions.Tpo $(DEPDIR)/libpolarhrm_la-RawSessions.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/RawSessions.cpp' object='libpolarhrm_la-RawSessions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RawSessions.lo `test -f 'libpolarhrm/Watch/RawSessions.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/RawSessions.cpp

libpolarhrm_la-wDate.lo: libpolarhrm/Watch/wDate.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-wDate.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-wDate.Tpo -c -o libpolarhrm_la-wDate.lo `test -f 'libpolarhrm/Watch/wDate.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/wDate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-wDate.Tpo $(DEPDIR)/libpolarhrm_la-wDate.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/wDate.cpp' object='libpolarhrm_la-wDate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-wDate.lo `test -f 'libpolarhrm/Watch/wDate.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/wDate.cpp

libpolarhrm_la-HrmFile.lo: libpolarhrm/Watch/HrmFile.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-HrmFile.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-HrmFile.Tpo -c -o libpolarhrm_la-HrmFile.lo `test -f 'libpolarhrm/Watch/HrmFile.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/HrmFile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-HrmFile.Tpo $(DEPDIR)/libpolarhrm_la-HrmFile.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/HrmFile.cpp' object='libpolarhrm_la-HrmFile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-HrmFile.lo `test -f 'libpolarhrm/Watch/HrmFile.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/HrmFile.cpp

libpolarhrm_la-Lap.lo: libpolarhrm/Watch/Lap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-Lap.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-Lap.Tpo -c -o libpolarhrm_la-Lap.lo `test -f 'libpolarhrm/Watch/Lap.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Lap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-Lap.Tpo $(DEPDIR)/libpolarhrm_la-Lap.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/Lap.cpp' object='libpolarhrm_la-Lap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-Lap.lo `test -f 'libpolarhrm/Watch/Lap.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Lap.cpp

libpolarhrm_la-Limit.lo: libpolarhrm/Watch/Limit.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-Limit.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-Limit.Tpo -c -o libpolarhrm_la-Limit.lo `test -f 'libpolarhrm/Watch/Limit.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Limit.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-Limit.Tpo $(DEPDIR)/libpolarhrm_la-Limit.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/Limit.cpp' object='libpolarhrm_la-Limit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-Limit.lo `test -f 'libpolarhrm/Watch/Limit.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Limit.cpp

libpolarhrm_la-Sample.lo: libpolarhrm/Watch/Sample.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-Sample.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-Sample.Tpo -c -o libpolarhrm_la-Sample.lo `test -f 'libpolarhrm/Watch/Sample.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Sample.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-Sample.Tpo $(DEPDIR)/libpolarhrm_la-Sample.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/Sample.cpp' object='libpolarhrm_la-Sample.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-Sample.lo `test -f 'libpolarhrm/Watch/Sample.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Sample.cpp

libpolarhrm_la-Session.lo: libpolarhrm/Watch/Session.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-Session.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-Session.Tpo -c -o libpolarhrm_la-Session.lo `test -f 'libpolarhrm/Watch/Session.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Session.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-Session.Tpo $(DEPDIR)/libpolarhrm_la-Session.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/Session.cpp' object='libpolarhrm_la-Session.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-Session.lo `test -f 'libpolarhrm/Watch/Session.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Session.cpp

libpolarhrm_la-sportZone.lo: libpolarhrm/Watch/sportZone.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-sportZone.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-sportZone.Tpo -c -o libpolarhrm_la-sportZone.lo `test -f 'libpolarhrm/Watch/sportZone.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/sportZone.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-sportZone.Tpo $(DEPDIR)/libpolarhrm_la-sportZone.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/sportZone.cpp' object='libpolarhrm_la-sportZone.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-sportZone.lo `test -f 'libpolarhrm/Watch/sportZone.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/sportZone.cpp

libpolarhrm_la-wTime.lo: libpolarhrm/Watch/wTime.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-wTime.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-wTime.Tpo -c -o libpolarhrm_la-wTime.lo `test -f 'libpolarhrm/Watch/wTime.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/wTime.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-wTime.Tpo $(DEPDIR)/libpolarhrm_la-wTime.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/wTime.cpp' object='libpolarhrm_la-wTime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-wTime.lo `test -f 'libpolarhrm/Watch/wTime.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/wTime.cpp

libpolarhrm_la-Watch.lo: libpolarhrm/Watch/Watch.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-Watch.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-Watch.Tpo -c -o libpolarhrm_la-Watch.lo `test -f 'libpolarhrm/Watch/Watch.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Watch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-Watch.Tpo $(DEPDIR)/libpolarhrm_la-Watch.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/Watch.cpp' object='libpolarhrm_la-Watch.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-Watch.lo `test -f 'libpolarhrm/Watch/Watch.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Watch.cpp

libpolarhrm_la-util_functions.lo: libpolarhrm/util_functions.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-util_functions.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-util_functions.Tpo -c -o libpolarhrm_la-util_functions.lo `test -f 'libpolarhrm/util_functions.cpp' || echo '$(srcdir)/'`libpolarhrm/util_functions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-util_functions.Tpo $(DEPDIR)/libpolarhrm_la-util_functions.Plo
#	$(AM_V_CXX)source='libpolarhrm/util_functions.cpp' object='libpolarhrm_la-util_functions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-util_functions.lo `test -f 'libpolarhrm/util_functions.cpp' || echo '$(srcdir)/'`libpolarhrm/util_functions.cpp

libpolarhrm_la-Datanode.lo: libpolarhrm/Datanode.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-Datanode.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-Datanode.Tpo -c -o libpolarhrm_la-Datanode.lo `test -f 'libpolarhrm/Datanode.cpp' || echo '$(srcdir)/'`libpolarhrm/Datanode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-Datanode.Tpo $(DEPDIR)/libpolarhrm_la-Datanode.Plo
#	$(AM_V_CXX)source='libpolarhrm/Datanode.cpp' object='libpolarhrm_la-Datanode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-Datanode.lo `test -f 'libpolarhrm/Datanode.cpp' || echo '$(srcdir)/'`libpolarhrm/Datanode.cpp

libpolarhrm_la-libpolarhrm.lo: libpolarhrm/libpolarhrm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-libpolarhrm.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-libpolarhrm.Tpo -c -o libpolarhrm_la-libpolarhrm.lo `test -f 'libpolarhrm/libpolarhrm.cpp' || echo '$(srcdir)/'`libpolarhrm/libpolarhrm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-libpolarhrm.Tpo $(DEPDIR)/libpolarhrm_la-libpolarhrm.Plo
#	$(AM_V_CXX)source='libpolarhrm/libpolarhrm.cpp' object='libpolarhrm_la-libpolarhrm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-libpolarhrm.lo `test -f 'libpolarhrm/libpolarhrm.cpp' || echo '$(srcdir)/'`libpolarhrm/libpolarhrm.cpp

libpolarhrm_la-Gps.lo: libpolarhrm/Watch/Gps.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-Gps.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-Gps.Tpo -c -o libpolarhrm_la-Gps.lo `test -f 'libpolarhrm/Watch/Gps.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Gps.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-Gps.Tpo $(DEPDIR)/libpolarhrm_la-Gps.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/Gps.cpp' object='libpolarhrm_la-Gps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-Gps.lo `test -f 'libpolarhrm/Watch/Gps.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/Gps.cpp

libpolarhrm_la-GpxFile.lo: libpolarhrm/Watch/GpxFile.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-GpxFile.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-GpxFile.Tpo -c -o libpolarhrm_la-GpxFile.lo `test -f 'libpolarhrm/Watch/GpxFile.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/GpxFile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-GpxFile.Tpo $(DEPDIR)/libpolarhrm_la-GpxFile.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/GpxFile.cpp' object='libpolarhrm_la-GpxFile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-GpxFile.lo `test -f 'libpolarhrm/Watch/GpxFile.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/GpxFile.cpp

libpolarhrm_la-RCX5_comm.lo: libpolarhrm/RCX5_watch/RCX5_comm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RCX5_comm.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RCX5_comm.Tpo -c -o libpolarhrm_la-RCX5_comm.lo `test -f 'libpolarhrm/RCX5_watch/RCX5_comm.cpp' || echo '$(srcdir)/'`libpolarhrm/RCX5_watch/RCX5_comm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RCX5_comm.Tpo $(DEPDIR)/libpolarhrm_la-RCX5_comm.Plo
#	$(AM_V_CXX)source='libpolarhrm/RCX5_watch/RCX5_comm.cpp' object='libpolarhrm_la-RCX5_comm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RCX5_comm.lo `test -f 'libpolarhrm/RCX5_watch/RCX5_comm.cpp' || echo '$(srcdir)/'`libpolarhrm/RCX5_watch/RCX5_comm.cpp

libpolarhrm_la-RCX5.lo: libpolarhrm/RCX5_watch/RCX5.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RCX5.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RCX5.Tpo -c -o libpolarhrm_la-RCX5.lo `test -f 'libpolarhrm/RCX5_watch/RCX5.cpp' || echo '$(srcdir)/'`libpolarhrm/RCX5_watch/RCX5.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RCX5.Tpo $(DEPDIR)/libpolarhrm_la-RCX5.Plo
#	$(AM_V_CXX)source='libpolarhrm/RCX5_watch/RCX5.cpp' object='libpolarhrm_la-RCX5.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RCX5.lo `test -f 'libpolarhrm/RCX5_watch/RCX5.cpp' || echo '$(srcdir)/'`libpolarhrm/RCX5_watch/RCX5.cpp

libpolarhrm_la-RCX5_parse.lo: libpolarhrm/RCX5_watch/RCX5_parse.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RCX5_parse.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RCX5_parse.Tpo -c -o libpolarhrm_la-RCX5_parse.lo `test -f 'libpolarhrm/RCX5_watch/RCX5_parse.cpp' || echo '$(srcdir)/'`libpolarhrm/RCX5_watch/RCX5_parse.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RCX5_parse.Tpo $(DEPDIR)/libpolarhrm_la-RCX5_parse.Plo
#	$(AM_V_CXX)source='libpolarhrm/RCX5_watch/RCX5_parse.cpp' object='libpolarhrm_la-RCX5_parse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RCX5_parse.lo `test -f 'libpolarhrm/RCX5_watch/RCX5_parse.cpp' || echo '$(srcdir)/'`libpolarhrm/RCX5_watch/RCX5_parse.cpp

libpolarhrm_la-RCX5_parse_overview.lo: libpolarhrm/RCX5_watch/RCX5_parse_overview.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RCX5_parse_overview.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RCX5_parse_overview.Tpo -c -o libpolarhrm_la-RCX5_parse_overview.lo `test -f 'libpolarhrm/RCX5_watch/RCX5_parse_overview.cpp' || echo '$(srcdir)/'`libpolarhrm/RCX5_watch/RCX5_parse_overview.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RCX5_parse_overview.Tpo $(DEPDIR)/libpolarhrm_la-RCX5_parse_overview.Plo
#	$(AM_V_CXX)source='libpolarhrm/RCX5_watch/RCX5_parse_overview.cpp' object='libpolarhrm_la-RCX5_parse_overview.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RCX5_parse_overview.lo `test -f 'libpolarhrm/RCX5_watch/RCX5_parse_overview.cpp' || echo '$(srcdir)/'`libpolarhrm/RCX5_watch/RCX5_parse_overview.cpp

libpolarhrm_la-RCX5_parse_session.lo: libpolarhrm/RCX5_watch/RCX5_parse_session.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-RCX5_parse_session.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-RCX5_parse_session.Tpo -c -o libpolarhrm_la-RCX5_parse_session.lo `test -f 'libpolarhrm/RCX5_watch/RCX5_parse_session.cpp' || echo '$(srcdir)/'`libpolarhrm/RCX5_watch/RCX5_parse_session.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-RCX5_parse_session.Tpo $(DEPDIR)/libpolarhrm_la-RCX5_parse_session.Plo
#	$(AM_V_CXX)source='libpolarhrm/RCX5_watch/RCX5_parse_session.cpp' object='libpolarhrm_la-RCX5_parse_session.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-RCX5_parse_session.lo `test -f 'libpolarhrm/RCX5_watch/RCX5_parse_session.cpp' || echo '$(srcdir)/'`libpolarhrm/RCX5_watch/RCX5_parse_session.cpp

libpolarhrm_la-PddFile.lo: libpolarhrm/Watch/PddFile.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-PddFile.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-PddFile.Tpo -c -o libpolarhrm_la-PddFile.lo `test -f 'libpolarhrm/Watch/PddFile.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/PddFile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-PddFile.Tpo $(DEPDIR)/libpolarhrm_la-PddFile.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/PddFile.cpp' object='libpolarhrm_la-PddFile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-PddFile.lo `test -f 'libpolarhrm/Watch/PddFile.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/PddFile.cpp

libpolarhrm_la-ExercisePddFile.lo: libpolarhrm/Watch/ExercisePddFile.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -MT libpolarhrm_la-ExercisePddFile.lo -MD -MP -MF $(DEPDIR)/libpolarhrm_la-ExercisePddFile.Tpo -c -o libpolarhrm_la-ExercisePddFile.lo `test -f 'libpolarhrm/Watch/ExercisePddFile.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/ExercisePddFile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpolarhrm_la-ExercisePddFile.Tpo $(DEPDIR)/libpolarhrm_la-ExercisePddFile.Plo
#	$(AM_V_CXX)source='libpolarhrm/Watch/ExercisePddFile.cpp' object='libpolarhrm_la-ExercisePddFile.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpolarhrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libpolarhrm_la-ExercisePddFile.lo `test -f 'libpolarhrm/Watch/ExercisePddFile.cpp' || echo '$(srcdir)/'`libpolarhrm/Watch/ExercisePddFile.cpp

polarhrm.o: cli/polarhrm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT polarhrm.o -MD -MP -MF $(DEPDIR)/polarhrm.Tpo -c -o polarhrm.o `test -f 'cli/polarhrm.cpp' || echo '$(srcdir)/'`cli/polarhrm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/polarhrm.Tpo $(DEPDIR)/polarhrm.Po
#	$(AM_V_CXX)source='cli/polarhrm.cpp' object='polarhrm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o polarhrm.o `test -f 'cli/polarhrm.cpp' || echo '$(srcdir)/'`cli/polarhrm.cpp

polarhrm.obj: cli/polarhrm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT polarhrm.obj -MD -MP -MF $(DEPDIR)/polarhrm.Tpo -c -o polarhrm.obj `if test -f 'cli/polarhrm.cpp'; then $(CYGPATH_W) 'cli/polarhrm.cpp'; else $(CYGPATH_W) '$(srcdir)/cli/polarhrm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/polarhrm.Tpo $(DEPDIR)/polarhrm.Po
#	$(AM_V_CXX)source='cli/polarhrm.cpp' object='polarhrm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o polarhrm.obj `if test -f 'cli/polarhrm.cpp'; then $(CYGPATH_W) 'cli/polarhrm.cpp'; else $(CYGPATH_W) '$(srcdir)/cli/polarhrm.cpp'; fi`

simulate_watch.o: cli/simulate_watch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simulate_watch.o -MD -MP -MF $(DEPDIR)/simulate_watch.Tpo -c -o simulate_watch.o `test -f 'cli/simulate_watch.cpp' || echo '$(srcdir)/'`cli/simulate_watch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/simulate_watch.Tpo $(DEPDIR)/simulate_watch.Po
#	$(AM_V_CXX)source='cli/simulate_watch.cpp' object='simulate_watch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simulate_watch.o `test -f 'cli/simulate_watch.cpp' || echo '$(srcdir)/'`cli/simulate_watch.cpp

simulate_watch.obj: cli/simulate_watch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT simulate_watch.obj -MD -MP -MF $(DEPDIR)/simulate_watch.Tpo -c -o simulate_watch.obj `if test -f 'cli/simulate_watch.cpp'; then $(CYGPATH_W) 'cli/simulate_watch.cpp'; else $(CYGPATH_W) '$(srcdir)/cli/simulate_watch.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simulate_watch.Tpo $(DEPDIR)/simulate_watch.Po
#	$(AM_V_CXX)source='cli/simulate_watch.cpp' object='simulate_watch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o simulate_watch.obj `if test -f 'cli/simulate_watch.cpp'; then $(CYGPATH_W) 'cli/simulate_watch.cpp'; else $(CYGPATH_W) '$(srcdir)/cli/simulate_watch.cpp'; fi`

test-test.o: cli/test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_CXXFLAGS) $(CXXFLAGS) -MT test-test.o -MD -MP -MF $(DEPDIR)/test-test.Tpo -c -o test-test.o `test -f 'cli/test.cpp' || echo '$(srcdir)/'`cli/test.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/test-test.Tpo $(DEPDIR)/test-test.Po
#	$(AM_V_CXX)source='cli/test.cpp' object='test-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_CXXFLAGS) $(CXXFLAGS) -c -o test-test.o `test -f 'cli/test.cpp' || echo '$(srcdir)/'`cli/test.cpp

test-test.obj: cli/test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_CXXFLAGS) $(CXXFLAGS) -MT test-test.obj -MD -MP -MF $(DEPDIR)/test-test.Tpo -c -o test-test.obj `if test -f 'cli/test.cpp'; then $(CYGPATH_W) 'cli/test.cpp'; else $(CYGPATH_W) '$(srcdir)/cli/test.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test-test.Tpo $(DEPDIR)/test-test.Po
#	$(AM_V_CXX)source='cli/test.cpp' object='test-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_CXXFLAGS) $(CXXFLAGS) -c -o test-test.obj `if test -f 'cli/test.cpp'; then $(CYGPATH_W) 'cli/test.cpp'; else $(CYGPATH_W) '$(srcdir)/cli/test.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
